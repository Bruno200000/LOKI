const https = require('https');

// URLs de test bas√©es sur les erreurs du log
const testUrls = [
  'https://tcvvczdwchowscaaeezd.supabase.co/storage/v1/object/public/house-media/videos/1760696590445-k5joot3rpg.mp4',
  'https://tcvvczdwchowscaaeezd.supabase.co/storage/v1/object/public/house-media/videos/1760623427063-u8tmywurjbf.mp4'
];

async function testVideoUrls() {
  console.log('üîç TEST D\'ACCESSIBILIT√â DES VID√âOS SUPABASE STORAGE');
  console.log('=================================================\n');

  for (const url of testUrls) {
    console.log(`üé¨ Test de: ${url}`);

    try {
      await new Promise((resolve, reject) => {
        const req = https.request(url, { method: 'HEAD' }, (res) => {
          console.log(`   ‚úÖ HTTP Status: ${res.statusCode}`);
          console.log(`   ‚úÖ Status Text: ${res.statusMessage}`);
          console.log(`   ‚úÖ Content-Type: ${res.headers['content-type']}`);
          console.log(`   ‚úÖ Content-Length: ${res.headers['content-length']}`);

          if (res.statusCode === 200) {
            console.log(`   ‚úÖ VID√âO ACCESSIBLE!`);
          } else if (res.statusCode === 404) {
            console.log(`   ‚ùå Fichier introuvable (404)`);
          } else if (res.statusCode === 403) {
            console.log(`   ‚ùå Acc√®s interdit (403) - V√©rifiez les politiques RLS`);
          } else {
            console.log(`   ‚ö†Ô∏è Status inattendu: ${res.statusCode}`);
          }

          resolve();
        });

        req.on('error', (error) => {
          console.log(`   ‚ùå Erreur de connexion: ${error.message}`);
          reject(error);
        });

        req.setTimeout(10000, () => {
          console.log(`   ‚è∞ Timeout apr√®s 10 secondes`);
          req.destroy();
          resolve();
        });

        req.end();
      });
    } catch (error) {
      console.log(`   ‚ùå Erreur: ${error.message}`);
    }

    console.log('');
  }

  console.log('üí° DIAGNOSTIC:');
  console.log('- Si 404: Les fichiers n\'existent pas dans Supabase Storage');
  console.log('- Si 403: Les politiques RLS bloquent l\'acc√®s public');
  console.log('- Si timeout: Probl√®me de r√©seau ou fichier tr√®s volumineux');
  console.log('- Si 200: Les vid√©os sont accessibles!');

  console.log('\nüöÄ PROCHAINES √âTAPES:');
  console.log('1. Ex√©cutez le script storage_policies.sql dans Supabase SQL Editor');
  console.log('2. V√©rifiez que les fichiers existent dans Storage ‚Üí house-media/videos/');
  console.log('3. Rechargez votre app React avec npm run dev');
}

testVideoUrls();
