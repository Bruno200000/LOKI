-- üß™ Test direct de l'acc√®s aux r√©servations
-- Ex√©cutez ce script dans Supabase pour tester les r√©servations

-- 1. Test simple sans politiques
ALTER TABLE public.bookings DISABLE ROW LEVEL SECURITY;

-- 2. Tester l'acc√®s direct
SELECT
  'üìã TEST BOOKINGS - SANS RLS' as test,
  '' as details
UNION ALL
SELECT
  'Nombre de r√©servations',
  COUNT(*)::text || ' r√©servations trouv√©es'
FROM public.bookings
UNION ALL
SELECT
  'Statuts disponibles',
  string_agg(DISTINCT status, ', ') || ' (' || COUNT(DISTINCT status)::text || ' statuts)'
FROM public.bookings
UNION ALL
SELECT
  'Plage de dates',
  'Du ' || MIN(created_at)::date || ' au ' || MAX(created_at)::date
FROM public.bookings;

-- 3. Afficher quelques r√©servations
SELECT
  'üè† EXEMPLES DE R√âSERVATIONS' as info,
  '' as details
UNION ALL
SELECT
  'ID: ' || LEFT(id, 8) || '...',
  'Statut: ' || status || ' | Loyer: ' || monthly_rent || ' FCFA | Cr√©√©e: ' || created_at::date
FROM public.bookings
ORDER BY created_at DESC
LIMIT 5;

-- 4. R√©activer RLS avec politiques simples
ALTER TABLE public.bookings ENABLE ROW LEVEL SECURITY;

-- Supprimer les politiques existantes
DROP POLICY IF EXISTS "Admin can view all bookings" ON public.bookings;
DROP POLICY IF EXISTS "Users can view own bookings" ON public.bookings;
DROP POLICY IF EXISTS "bookings_auth_select" ON public.bookings;

-- Cr√©er une politique simple
CREATE POLICY "bookings_simple_access" ON public.bookings
FOR SELECT
USING (true);

-- 5. Tester avec RLS activ√©
SELECT
  '‚úÖ TEST BOOKINGS - AVEC RLS SIMPLE' as test,
  '' as details
UNION ALL
SELECT
  'Nombre de r√©servations',
  COUNT(*)::text || ' r√©servations trouv√©es'
FROM public.bookings
UNION ALL
SELECT
  'Statuts disponibles',
  string_agg(DISTINCT status, ', ') || ' (' || COUNT(DISTINCT status)::text || ' statuts)'
FROM public.bookings
UNION ALL
SELECT
  'Plage de dates',
  'Du ' || MIN(created_at)::date || ' au ' || MAX(created_at)::date
FROM public.bookings;

-- 6. Afficher les politiques finales
SELECT
  'üìã POLITIQUES RLS ACTUELLES' as info,
  '' as details
UNION ALL
SELECT
  tablename,
  COUNT(*)::text || ' politiques: ' || string_agg(policyname, ', ') as details
FROM pg_policies
WHERE schemaname = 'public'
AND tablename = 'bookings'
GROUP BY tablename;
